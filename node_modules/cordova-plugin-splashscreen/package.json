{
  "_args": [
    [
      {
        "raw": "https://github.com/apache/cordova-plugin-splashscreen.git",
        "scope": null,
        "escapedName": null,
        "name": null,
        "rawSpec": "https://github.com/apache/cordova-plugin-splashscreen.git",
        "spec": "git+https://github.com/apache/cordova-plugin-splashscreen.git",
        "type": "hosted",
        "hosted": {
          "type": "github",
          "ssh": "git@github.com:apache/cordova-plugin-splashscreen.git",
          "sshUrl": "git+ssh://git@github.com/apache/cordova-plugin-splashscreen.git",
          "httpsUrl": "git+https://github.com/apache/cordova-plugin-splashscreen.git",
          "gitUrl": "git://github.com/apache/cordova-plugin-splashscreen.git",
          "shortcut": "github:apache/cordova-plugin-splashscreen",
          "directUrl": "https://raw.githubusercontent.com/apache/cordova-plugin-splashscreen/master/package.json"
        }
      },
      "/Users/appsquad/Jeevitha/Project/MealTracker"
    ]
  ],
  "_from": "git+https://github.com/apache/cordova-plugin-splashscreen.git",
  "_id": "cordova-plugin-splashscreen@6.0.1-dev",
  "_inCache": true,
  "_location": "/cordova-plugin-splashscreen",
  "_phantomChildren": {},
  "_requested": {
    "raw": "https://github.com/apache/cordova-plugin-splashscreen.git",
    "scope": null,
    "escapedName": null,
    "name": null,
    "rawSpec": "https://github.com/apache/cordova-plugin-splashscreen.git",
    "spec": "git+https://github.com/apache/cordova-plugin-splashscreen.git",
    "type": "hosted",
    "hosted": {
      "type": "github",
      "ssh": "git@github.com:apache/cordova-plugin-splashscreen.git",
      "sshUrl": "git+ssh://git@github.com/apache/cordova-plugin-splashscreen.git",
      "httpsUrl": "git+https://github.com/apache/cordova-plugin-splashscreen.git",
      "gitUrl": "git://github.com/apache/cordova-plugin-splashscreen.git",
      "shortcut": "github:apache/cordova-plugin-splashscreen",
      "directUrl": "https://raw.githubusercontent.com/apache/cordova-plugin-splashscreen/master/package.json"
    }
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "git+https://github.com/apache/cordova-plugin-splashscreen.git#f41610c2f7850b82325f0b35decbbcd6008a99cc",
  "_shasum": "5b3e4b04bc18dffe2897c3bebdc6f731e4fbc8fb",
  "_shrinkwrap": null,
  "_spec": "https://github.com/apache/cordova-plugin-splashscreen.git",
  "_where": "/Users/appsquad/Jeevitha/Project/MealTracker",
  "author": {
    "name": "Apache Software Foundation"
  },
  "bugs": {
    "url": "https://github.com/apache/cordova-plugin-splashscreen/issues"
  },
  "cordova": {
    "id": "cordova-plugin-splashscreen",
    "platforms": [
      "android",
      "windows",
      "browser"
    ]
  },
  "dependencies": {},
  "description": "Cordova Splashscreen Plugin",
  "devDependencies": {
    "@cordova/eslint-config": "^3.0.0"
  },
  "engines": {
    "cordovaDependencies": {
      "2.0.0": {
        "cordova-android": ">=3.6.0"
      },
      "7.0.0": {
        "cordova": ">100"
      },
      ">=4.0.0": {
        "cordova-android": ">=3.6.0",
        "cordova-windows": ">=4.4.0"
      }
    }
  },
  "gitHead": "f41610c2f7850b82325f0b35decbbcd6008a99cc",
  "homepage": "https://github.com/apache/cordova-plugin-splashscreen#readme",
  "keywords": [
    "cordova",
    "splashscreen",
    "ecosystem:cordova",
    "cordova-android",
    "cordova-windows",
    "cordova-browser"
  ],
  "license": "Apache-2.0",
  "name": "cordova-plugin-splashscreen",
  "optionalDependencies": {},
  "readme": "---\ntitle: Splashscreen\ndescription: Control the splash screen for your app.\n---\n<!--\n# license: Licensed to the Apache Software Foundation (ASF) under one\n#         or more contributor license agreements.  See the NOTICE file\n#         distributed with this work for additional information\n#         regarding copyright ownership.  The ASF licenses this file\n#         to you under the Apache License, Version 2.0 (the\n#         \"License\"); you may not use this file except in compliance\n#         with the License.  You may obtain a copy of the License at\n#\n#           http://www.apache.org/licenses/LICENSE-2.0\n#\n#         Unless required by applicable law or agreed to in writing,\n#         software distributed under the License is distributed on an\n#         \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n#         KIND, either express or implied.  See the License for the\n#         specific language governing permissions and limitations\n#         under the License.\n-->\n\n|AppVeyor|Travis CI|\n|:-:|:-:|\n|[![Build status](https://ci.appveyor.com/api/projects/status/github/apache/cordova-plugin-splashscreen?branch=master)](https://ci.appveyor.com/project/ApacheSoftwareFoundation/cordova-plugin-splashscreen)|[![Build Status](https://travis-ci.org/apache/cordova-plugin-splashscreen.svg?branch=master)](https://travis-ci.org/apache/cordova-plugin-splashscreen)|\n\n# cordova-plugin-splashscreen\n\nThis plugin displays and hides a splash screen while your web application is launching. Using its methods you can also show and hide the splash screen manually.\n\n- [cordova-plugin-splashscreen](#cordova-plugin-splashscreen)\n  - [Installation](#installation)\n  - [Supported Platforms](#supported-platforms)\n  - [Platform Splash Screen Image Configuration](#platform-splash-screen-image-configuration)\n    - [Example Configuration](#example-configuration)\n    - [Android-specific Information](#android-specific-information)\n      - [Image Layout](#image-layout)\n      - [`density`](#density)\n      - [Image Sizing Table](#image-sizing-table)\n      - [Example Android Configuration](#example-android-configuration)\n    - [iOS-specific Information](#ios-specific-information)\n      - [Launch Storyboard Images](#launch-storyboard-images)\n        - [Designing Launch Storyboard Images](#designing-launch-storyboard-images)\n        - [Scale](#scale)\n        - [Idioms](#idioms)\n        - [Size classes](#size-classes)\n        - [Single-image launch screen](#single-image-launch-screen)\n        - [Multi-image launch screen](#multi-image-launch-screen)\n        - [Quirks and Known Issues](#quirks-and-known-issues)\n    - [Windows-specific Information](#windows-specific-information)\n  - [Preferences](#preferences)\n    - [config.xml](#configxml)\n    - [Quirks](#quirks)\n      - [Android Quirks](#android-quirks)\n      - [Browser Quirks](#browser-quirks)\n      - [iOS Quirks](#ios-quirks)\n      - [Windows Quirks](#windows-quirks)\n  - [Methods](#methods)\n    - [splashscreen.hide](#splashscreenhide)\n      - [iOS Quirk](#ios-quirk)\n    - [splashscreen.show](#splashscreenshow)\n\n## Installation\n\n    // npm hosted (new) id\n    cordova plugin add cordova-plugin-splashscreen\n\n    // you may also install directly from this repo\n    cordova plugin add https://github.com/apache/cordova-plugin-splashscreen.git\n\n## Supported Platforms\n\n- Android\n- iOS\n- Windows (`cordova-windows` version >= 4.4.0 is required)  \n  __Note__: Extended splashscreen does not require the plugin on Windows (as opposed to Android and iOS) in case you don't use the plugin API, i.e. programmatic hide/show.\n- Browser\n\n## Platform Splash Screen Image Configuration\n\n### Example Configuration\n\nIn the top-level `config.xml` file (not the one in `platforms`), add configuration elements like those specified here.\n\nThe value of the \"src\" attribute is relative to the project root directory and NOT to the `www` directory (see `Directory structure` below). You can name the source image file whatever you like. The internal name in the application is automatically determined by Cordova.\n\nDirectory structure:\n\n```\nprojectRoot\n    hooks\n    platforms\n    plugins\n    www\n        css\n        img\n        js\n    res\n        screen\n            android\n            ios\n            windows\n```\n\n```xml\n<platform name=\"android\">\n    <splash src=\"res/screen/android/splash-land-hdpi.png\" density=\"land-hdpi\" />\n    <splash src=\"res/screen/android/splash-land-ldpi.png\" density=\"land-ldpi\" />\n    <splash src=\"res/screen/android/splash-land-mdpi.png\" density=\"land-mdpi\" />\n    <splash src=\"res/screen/android/splash-land-xhdpi.png\" density=\"land-xhdpi\" />\n    <splash src=\"res/screen/android/splash-land-xxhdpi.png\" density=\"land-xxhdpi\" />\n    <splash src=\"res/screen/android/splash-land-xxxhdpi.png\" density=\"land-xxxhdpi\" />\n\n    <splash src=\"res/screen/android/splash-port-hdpi.png\" density=\"port-hdpi\" />\n    <splash src=\"res/screen/android/splash-port-ldpi.png\" density=\"port-ldpi\" />\n    <splash src=\"res/screen/android/splash-port-mdpi.png\" density=\"port-mdpi\" />\n    <splash src=\"res/screen/android/splash-port-xhdpi.png\" density=\"port-xhdpi\" />\n    <splash src=\"res/screen/android/splash-port-xxhdpi.png\" density=\"port-xxhdpi\" />\n    <splash src=\"res/screen/android/splash-port-xxxhdpi.png\" density=\"port-xxxhdpi\" /> \n</platform>\n\n<platform name=\"ios\">\n    <!-- Storyboard (supports all devices):\n      -- Note: images are determined by scale, idiom, and size traits. The following\n      -- are suggested based on current device form factors -->\n    <splash src=\"res/screen/ios/Default@2x~universal~anyany.png\" />\n    <splash src=\"res/screen/ios/Default@2x~universal~comany.png\" />\n    <splash src=\"res/screen/ios/Default@2x~universal~comcom.png\" />\n    <splash src=\"res/screen/ios/Default@3x~universal~anyany.png\" />\n    <splash src=\"res/screen/ios/Default@3x~universal~anycom.png\" />\n    <splash src=\"res/screen/ios/Default@3x~universal~comany.png\" />\n</platform>\n\n<!-- Configuration using MRT concept (Recommended, see \"Windows-specific information\" section for details): -->\n<platform name=\"windows\">\n    <splash src=\"res/screen/windows/splashscreen.png\" target=\"SplashScreen\"/>\n    <splash src=\"res/screen/windows/splashscreenphone.png\" target=\"SplashScreenPhone\"/>\n</platform>\n\n<!-- Configuration using image size: -->\n<!--<platform name=\"windows\">\n    <splash src=\"res/screen/windows/splashscreen.png\" width=\"620\" height=\"300\"/>\n    <splash src=\"res/screen/windows/splashscreenphone.png\" width=\"1152\" height=\"1920\"/>\n</platform>-->\n\n<preference name=\"SplashScreenDelay\" value=\"10000\" />\n```\n\n### Android-specific Information\n\nTo effectively create your Android SplashScreen assets, it is important to understand the idiom and sizes used for the assets.\n\nAndroid defined its assets by the image's layout and `density`.\n\n#### Image Layout\n\n- `land` short for landscape mode\n- `port` short for portrait mode\n\n#### `density`\n\nThe image's density refers to the number of pixels per square inch. Android, interchangeably refers to this as DPI.\n\nNot all devices have the same pixel size so it is important to create images for all DPI to ensure that the quality of the image for each device is great.\n\nIf not all DPI images are considered, some devices might not show a SplashScreen or will use an incorrect DPI image that can result in a blurry scaled image.\n\n#### Image Sizing Table\n\n|  size   | portrait  | landscape |\n| :-----: | :-------: | :-------: |\n|  ldpi   |  200x320  |  320x200  |\n|  mdpi   |  320x480  |  480x320  |\n|  hdpi   |  480x800  |  800x480  |\n|  xhdpi  | 720x1280  | 1280x720  |\n| xxhdpi  | 960x1600  | 1600x960  |\n| xxxhdpi | 1280x1920 | 1920x1280 |\n\n#### Example Android Configuration\n\n```xml\n<platform name=\"android\">\n    <splash src=\"res/screen/android/splash-land-hdpi.png\" density=\"land-hdpi\" />\n    <splash src=\"res/screen/android/splash-land-ldpi.png\" density=\"land-ldpi\" />\n    <splash src=\"res/screen/android/splash-land-mdpi.png\" density=\"land-mdpi\" />\n    <splash src=\"res/screen/android/splash-land-xhdpi.png\" density=\"land-xhdpi\" />\n    <splash src=\"res/screen/android/splash-land-xxhdpi.png\" density=\"land-xxhdpi\" />\n    <splash src=\"res/screen/android/splash-land-xxxhdpi.png\" density=\"land-xxxhdpi\" />\n\n    <splash src=\"res/screen/android/splash-port-hdpi.png\" density=\"port-hdpi\" />\n    <splash src=\"res/screen/android/splash-port-ldpi.png\" density=\"port-ldpi\" />\n    <splash src=\"res/screen/android/splash-port-mdpi.png\" density=\"port-mdpi\" />\n    <splash src=\"res/screen/android/splash-port-xhdpi.png\" density=\"port-xhdpi\" />\n    <splash src=\"res/screen/android/splash-port-xxhdpi.png\" density=\"port-xxhdpi\" />\n    <splash src=\"res/screen/android/splash-port-xxxhdpi.png\" density=\"port-xxxhdpi\" />\n</platform>\n```\n\n### iOS-specific Information\n\nLaunch storyboard images are sized based on scale, idiom, and size classes. It supports all devices, and can be used with split-screen/slide-over multitasking.\n\nThere is no official support for providing a native-resolution launch image for the iPad Pro 12.9 or for providing launch images that work with split-screen multitasking or slide-over.\n\n**Note:** Since iOS 11, for iPhone X devices and greater (with notch screen), make sure to add `viewport-fit=cover` to the viewport meta tag in your `index.html` file to display the app correctly like so: `<meta name=\"viewport\" content=\"user-scalable=no, initial-scale=1, width=device-width, viewport-fit=cover\">` and make some modification to your app style by adding: `padding: env(safe-area-inset-top)` to your `index.css` file to avoid the unsafe areas behind notches in the screen.\n\n#### Launch Storyboard Images\n\nTo support newer form factors and split-screen/slide-over multitasking, launch storyboard images are used.\n\n- images are not specific to a given device.\n- images are scaled to fill the available viewport (while maintaining the aspect ratio).\n- the outer edges of the images will be cropped, and the amount will vary based on device an viewport.\n- there is no need to provide an image for each possible device, viewport, and orientation; iOS will choose the best image for the situation automatically.\n\n##### Designing Launch Storyboard Images\n\nThe key to designing a launch storyboard image is understanding that the edges of the image will almost certainly be cropped. Therefore, one should not place any important information near the edges of any images provided to the launch storyboard. Only the center is a safe area, and this all but guarantees that following Apple's advice of presenting an unpopulated user interface will not work well.\n\nInstead, the following tips should enable you to create a launch image that works across a multitude of form factors, viewports, and orientations:\n\n- Important graphics (logos, icons, titles) should be centered. The safe bounding region will vary, so you will need to test to ensure that the important graphics are never cropped. Better yet, don't supply any important graphics in the first place.\n\n  - You _can_ fine-tune the placement and size of these graphics.\n\n- Use a simple color wash. If you use two colors, you'll want one color to fill the top half of the image, and the second to fill the bottom half.  If you use a gradient, you'll probably want to ensure that the middle of the gradient lines up with the center of the image.\n\n- Don't worry about pixel perfection -- because the images are scaled, there's almost no chance the images will be perfectly fit to the pixel grid. Since all supported iOS devices use retina screens, users will be hard pressed to notice it anyway.\n\nIt is important to understand the concept of scale, idiom, and size class traits in order to use launch storyboard images effectively. Of the images supplied to the launch storyboard, iOS will choose the image that best matches the device and viewport and render that image. It is possible to supply only one launch image if so desired, but it is also possible to fine-tune the displayed launch image based on traits. When fine-tuning, one can ignore traits that aren't targeted or supported by the app.\n\n##### Scale\n\n|    scale    |    devices             |\n|:-----------:|:----------------------:|\n|     1x      | All non-retina devices |\n|     2x      | Most retina devices    |\n|     3x      | iPhone 6+/6s+,7s+      |\n\nIn general, you'll want to supply 2x and 3x images. Cordova only supports retina devices now, so there's no point in supplying 1x images.\n\n##### Idioms\n\n|    idiom    |    devices    |\n|:-----------:|:-------------:|\n|    ipad     | All iPads     |\n|   iphone    | All iPhones and iPod Touches    |\n|  universal  | All devices   |\n\nYou only need to provide universal images unless you need to fine-tune for a specific device idiom.\n\n##### Size classes\n\nThere are two size classes applies to both screen axes. Narrow viewports are considered to be the \"compact\" size class, and remaining viewports are considered \"regular\". When supplying images to Xcode, however, one must choose between \"any & compact\" and \"any & regular\". To stay consistent with the native terminology, this feature will match based on \"any\" and \"compact\". `any` will match regular-sized viewports. \n\nNote: this feature uses `com` as an abbreviation for \"compact\" classes.\n\nThe following classes are supported by this feature:\n\n|    width    |    height    |    orientation    |\n|:-----------:|:------------:|:-----------------:|\n|     any     |     any      |        any        |\n|     com     |     any      |     portrait      |\n|     any     |     com      |  landscape (wide) |\n|     com     |     com      | landscape (narrow)|\n\nTo see the complete list of size classes associated with devices and viewports, see <http://www.sizeclasses.com>.\n\n##### Single-image launch screen\n\nIf your launch image is simple, you may be able to avoid creating a lot of different launch images and supply only one. The launch image needs to meet the following requirements:\n\n- the image should be square\n- the image should be large enough to fit on an iPad Pro 12.9\": 2732x2732\n- anything important should fit within the center\n\nKeep in mind that the image will be cropped, possibly quite severely, depending upon the viewport.\n\nOnce the image is created, you can include it in your project by adding the following to `config.xml`:\n\n```xml\n    <splash src=\"res/screen/ios/Default@2x~universal~anyany.png\" />\n```\n\nBecause only one image is provided, iOS will utilize it in every context.\n\n##### Multi-image launch screen\n\nIf a single launch image won't meet your needs, you will probably need to supply at least six images, if not more. Furthermore, keep in mind that it will not be possible to fine tune the image to a specific device, but only to a device class, display factor, and viewport size.\n\nIf you don't need to target images to a specific idiom, you should create six images, as follows:\n\n|    scale    |    idiom    |    width    |    height    |    size    |    filename    |\n|:-----------:|:-----------:|:-----------:|:------------:|:----------:|:--------------:|\n|     2x*     |  universal  |     any     |     any      | 2732x2732  | `Default@2x~universal~anyany.png` |\n|     2x      |  universal  |     com     |     any      | 1278x2732  | `Default@2x~universal~comany.png` |\n|     2x      |  universal  |     com     |     com      | 1334x750   | `Default@2x~universal~comcom.png` |\n|     3x*     |  universal  |     any     |     any      | 2208x2208  | `Default@3x~universal~anyany.png` |\n|     3x      |  universal  |     any     |     com      | 2208x1242  | `Default@3x~universal~anycom.png` |\n|     3x      |  universal  |     com     |     any      | 1242x2208  | `Default@3x~universal~comany.png` |\n\n\\* this image is required in order for iOS utilize the other images within this scale and idiom.\n\n> Note: If the 3x sizes look small too you, that's because there's only one device class that currently has a 3x density: the iPhone 6+/6s+/7+.\n\nThe above looks like the following snippet when present in `config.xml`:\n\n```xml\n    <splash src=\"res/screen/ios/Default@2x~universal~anyany.png\" />\n    <splash src=\"res/screen/ios/Default@2x~universal~comany.png\" />\n    <splash src=\"res/screen/ios/Default@2x~universal~comcom.png\" />\n    <splash src=\"res/screen/ios/Default@3x~universal~anyany.png\" />\n    <splash src=\"res/screen/ios/Default@3x~universal~anycom.png\" />\n    <splash src=\"res/screen/ios/Default@3x~universal~comany.png\" />\n```\n\nShould one need to further fine tune based upon device idiom, one can do so. This might look like so:\n\n|    scale    |    idiom    |    width    |    height    |    size    |    filename    |\n|:-----------:|:-----------:|:-----------:|:------------:|:----------:|:--------------:|\n|     2x*     |    iphone   |     any     |     any      | 1334x1334  | `Default@2x~iphone~anyany.png` |\n|     2x      |    iphone   |     com     |     any      | 750x1334   | `Default@2x~iphone~comany.png` |\n|     2x      |    iphone   |     com     |     com      | 1334x750   | `Default@2x~iphone~comcom.png` |\n|     3x*     |    iphone   |     any     |     any      | 2208x2208  | `Default@3x~iphone~anyany.png` |\n|     3x      |    iphone   |     any     |     com      | 2208x1242  | `Default@3x~iphone~anycom.png` |\n|     3x      |    iphone   |     com     |     any      | 1242x2208  | `Default@3x~iphone~comany.png` |\n|     2x*     |     ipad    |     any     |     any      | 2732x2732  | `Default@2x~ipad~anyany.png`   |\n|     2x      |     ipad    |     com     |     any      | 1278x2732  | `Default@2x~ipad~comany.png`   |\n\n\\* this image is required in order for iOS utilize the other images within this scale and idiom.\n\nThe above looks like the following in `config.xml`:\n\n```xml\n    <splash src=\"res/screen/ios/Default@2x~iphone~anyany.png\" />\n    <splash src=\"res/screen/ios/Default@2x~iphone~comany.png\" />\n    <splash src=\"res/screen/ios/Default@2x~iphone~comcom.png\" />\n    <splash src=\"res/screen/ios/Default@3x~iphone~anyany.png\" />\n    <splash src=\"res/screen/ios/Default@3x~iphone~anycom.png\" />\n    <splash src=\"res/screen/ios/Default@3x~iphone~comany.png\" />\n    <splash src=\"res/screen/ios/Default@2x~ipad~anyany.png\" />\n    <splash src=\"res/screen/ios/Default@2x~ipad~comany.png\" />\n```\n\n##### Quirks and Known Issues\n\n1. **App on target may not reflect changes to images**\n   Once you run the app on a target, iOS caches the launch image. Unfortunately, when you change the image, iOS does _not_ invalidate the cache, which means you'll still see the old launch image. You should either: delete the app, or reset content & settings (simulator).\n\n2. **Simulator may not show expected images when launched from CLI**\n   When Xcode deploys to a specific simulator, it only copies the assets that match the simulator's characteristics. For example, if you try to run an app on the iPhone 6s Plus simulator, only @3x launch images are copied. When compiling from the CLI, however, the default is to assume an iPhone 5s, which means only @2x launch images are copied. Unless your launch images are markedly different, chances are good the difference would go unnoticed, but this does mean that the only accurate method of testing is to test on a physical device.\n\n3. **`anyany` must be provided for other variations to be used**\n   If you don't provide an `anyany` version of the launch image for a specific scale and idiom, the other variations (like `anycom`, `comany`, and `comcom`) will ignored. \n\n### Windows-specific Information\n\nSplash screen images can be defined using the [MRT](https://cordova.apache.org/docs/en/dev/config_ref/images.html#windows) concept.  \nIf you specify `src=\"res/windows/splashscreen.png\"` the following files will be copied into the application's images folder:  \n`res/windows/splashscreen.png` | `res/windows/splashscreen.scale-100.png`, `res/windows/splashscreen.scale-125.png`, etc.  \n\nThe following are supported:\n\n|   Scale, %   |       Project       |    Width    |    Height    |             Filename              |\n|:------------:|:-------------------:|:-----------:|:------------:|:---------------------------------:|\n|     100      |  Windows 10/8.1     |     620     |     300      | `splashscreen.png` \\| `splashscreen.scale-100.png`              |\n|     125      |  Windows 10         |     775     |     375      | `splashscreen.scale-125.png`      |\n|     150      |  Windows 10         |     930     |     450      | `splashscreen.scale-150.png`      |\n|     200      |  Windows 10         |     1240    |     600      | `splashscreen.scale-200.png`      |\n|     400      |  Windows 10         |     2480    |     1200     | `splashscreen.scale-400.png`      |\n|     140      |  Windows 8.1        |     868     |     420      | `splashscreen.scale-140.png`      |\n|     180      |  Windows 8.1        |     1116    |     540      | `splashscreen.scale-180.png`      |\n|     100      |  Windows Phone 8.1  |     480     |     800      | `splashscreenphone.png` \\| `splashscreenphone.scale-100.png`         |\n|     140      |  Windows Phone 8.1  |     672     |     1120     | `splashscreenphone.scale-140.png` |\n|     240      |  Windows Phone 8.1  |     1152    |     1920     | `splashscreenphone.scale-240.png` |\n\n__Note__: SplashScreens size for Windows 10 project should not exceed 200 KBytes.  \n__Note__: Supported formats are `.png`, `.jpg`, `.jpeg`. Mixing of the extensions within a target is not supported. I.e. you can have `splashscreen.jpg` and `splashscreenphone.png` but not `splashscreen.scale-100.png`, `splashscreen.scale-400.jpg`.  \n__Note__: You may need to reopen Visual Studio solution after changing the images and doing a `cordova prepare` for the changes to take effect.\n\n## Preferences\n\n### config.xml\n\n- `AutoHideSplashScreen` (boolean, default to `true`). Indicates whether to hide splash screen automatically or not. The splash screen is hidden after the amount of time specified in the `SplashScreenDelay` preference.\n\n    ```xml\n    <preference name=\"AutoHideSplashScreen\" value=\"true\" />\n    ```\n\n- `SplashScreenDelay` (number, default to 3000). Amount of time in milliseconds to wait before automatically hide splash screen.\n\n    ```xml\n    <preference name=\"SplashScreenDelay\" value=\"3000\" />\n    ```\n\n    This value used to be in seconds (but is now milliseconds) so values less than 30 will continue to be treated as seconds. (Consider this a deprecated patch that will disapear in some future version.)\n\n    To disable the splashscreen add the following preference to `config.xml`:\n    ```xml\n    <preference name=\"SplashScreenDelay\" value=\"0\"/>\n    ```\n\n    **Windows Quirk**: You should disable the splashscreen in case you are updating the entire document body dynamically (f.e. with a SPA router) to avoid affecting UI/controls.  \n    Note that you should also directly reference `WinJS/base.js` in the page HTML in this case to avoid the issues with activation context ([CB-11658](https://issues.apache.org/jira/browse/CB-11658)).\n\n    **iOS Quirk**: to disable the splashscreen on `ios` platform you should also add `<preference name=\"FadeSplashScreenDuration\" value=\"0\"/>` to `config.xml`.\n\n- `FadeSplashScreen` (boolean, defaults to `true`): Set to `false` to\n  prevent the splash screen from fading in and out when its display\n  state changes.\n\n    ```xml\n    <preference name=\"FadeSplashScreen\" value=\"false\"/>\n    ```\n\n- `FadeSplashScreenDuration` (float, defaults to `500`): Specifies the\n  number of milliseconds for the splash screen fade effect to execute.\n\n    ```xml\n    <preference name=\"FadeSplashScreenDuration\" value=\"750\"/>\n    ```\n\n    _Note_: `FadeSplashScreenDuration` is included into `SplashScreenDelay`, for example if you have `<preference name=\"SplashScreenDelay\" value=\"3000\" />` and `<preference name=\"FadeSplashScreenDuration\" value=\"1000\"/>` defined in `config.xml`:\n\n    - 00:00 - splashscreen is shown\n    - 00:02 - fading has started\n    - 00:03 - splashscreen is hidden\n\n    Turning the fading off via `<preference name=\"FadeSplashScreen\" value=\"false\"/>` technically means fading duration to be `0` so that in this example the overall splash screen delay will still be 3 seconds.\n\n    _Note_: This only applies to the application startup - you need to take the fading timeout into account when manually showing/hiding the splash screen in your application's code:\n\n    ```javascript\n    navigator.splashscreen.show();\n    window.setTimeout(function () {\n        navigator.splashscreen.hide();\n    }, splashDuration - fadeDuration);\n    ```\n\n- `ShowSplashScreenSpinner` (boolean, defaults to `true`): Set to `false`\n  to hide the splash screen spinner.\n\n    ```xml\n    <preference name=\"ShowSplashScreenSpinner\" value=\"false\"/>\n    ```\n    \n    _Note_: Does not work on Browser or Windows platforms.\n\n### Quirks\n\n#### Android Quirks\n\nIn your `config.xml`, you can add the following preferences:\n\n```xml\n<preference name=\"SplashMaintainAspectRatio\" value=\"true|false\" />\n<preference name=\"SplashShowOnlyFirstTime\" value=\"true|false\" />\n<preference name=\"SplashScreenSpinnerColor\" value=\"white\" />\n```\n\n`SplashMaintainAspectRatio` preference is optional. If set to `true`, the splash screen drawable is not stretched to fit the full screen, but instead simply \"covers\" the screen, like CSS \"background-size:cover\". This is very useful when splash screen images cannot be distorted in any way, for example when they contain scenery or text. This setting works best with images that have large margins (safe areas) that can be safely cropped on screens with different aspect ratios.\n\nThe splash screen plugin reloads the splash screen whenever the orientation changes so that you can specify different splash screen images for portrait and landscape orientations.\n\n`SplashShowOnlyFirstTime` preference is  optional and defaults to `true`. When set to `true` the splash screen will only appear on application launch. However, if you plan to use `navigator.app.exitApp()` to close the application and force the splash screen appear on the application's next launch, you should set this property to `false` (this also applies to closing the application with the Back button).\n\n`SplashScreenSpinnerColor` preference is also optional and is ignored when not set. Setting it to a valid color name or HEX color code will change the color of the spinner on Android 5.0+ devices.\n\n#### Browser Quirks\n\nYou can use the following preferences in your `config.xml`:\n\n```xml\n<platform name=\"browser\">\n    <preference name=\"SplashScreen\" value=\"/images/browser/splashscreen.jpg\" /> <!-- defaults to \"/img/logo.png\" -->\n    <preference name=\"AutoHideSplashScreen\" value=\"true\" /> <!-- defaults to \"true\" -->\n    <preference name=\"SplashScreenDelay\" value=\"3000\" /> <!-- defaults to \"3000\" -->\n    <preference name=\"SplashScreenBackgroundColor\" value=\"green\" /> <!-- defaults to \"#464646\" -->\n    <preference name=\"ShowSplashScreen\" value=\"false\" /> <!-- defaults to \"true\" -->\n    <preference name=\"SplashScreenWidth\" value=\"600\" /> <!-- defaults to \"170\" -->\n    <preference name=\"SplashScreenHeight\" value=\"300\" /> <!-- defaults to \"200\" -->\n</platform>\n```\n\n__Note__: `SplashScreen` value should be absolute in order to work in a sub-page. The `SplashScreen` value is used only for the browser platform. The value will be ignored for other platforms.\n\n#### iOS Quirks\n\n- In iOS, the splash screen images are called launch images. These images are mandatory on iOS.\n\n#### Windows Quirks\n\n- `SplashScreenSpinnerColor` (string, defaults to system accent color): hash, rgb notation or CSS color name.\n\n    ```xml\n    <preference name=\"SplashScreenSpinnerColor\" value=\"#242424\"/>\n    <preference name=\"SplashScreenSpinnerColor\" value=\"DarkRed\"/>\n    <preference name=\"SplashScreenSpinnerColor\" value=\"rgb(50,128,128)\"/>\n    ```\n\n- `SplashScreenBackgroundColor` (string, defaults to #464646): hex notation.\n\n    ```xml\n    <preference name=\"SplashScreenBackgroundColor\" value=\"0xFFFFFFFF\"/>\n    ```\n\n## Methods\n\n- splashscreen.show\n- splashscreen.hide\n\n### splashscreen.hide\n\nDismiss the splash screen.\n\n```js\nnavigator.splashscreen.hide();\n```\n\n\n#### iOS Quirk\n\nThe `config.xml` file's `AutoHideSplashScreen` setting must be\n`false`. To delay hiding the splash screen for two seconds, add a\ntimer such as the following in the `deviceready` event handler:\n\n```js\nsetTimeout(function() {\n    navigator.splashscreen.hide();\n}, 2000);\n```\n\n### splashscreen.show\n\nDisplays the splash screen.\n\n```js\nnavigator.splashscreen.show();\n```\n\nYour application cannot call `navigator.splashscreen.show()` until the application has\nstarted and the `deviceready` event has fired. But since typically the splash\nscreen is meant to be visible before your application has started, that would seem to\ndefeat the purpose of the splash screen.  Providing any parameters in\n`config.xml` will automatically `show` the splash screen immediately after your\napplication is launched and before it has fully started and received the `deviceready`\nevent. For this reason, it is unlikely you will need to call `navigator.splashscreen.show()` to make the splash\nscreen visible for application startup.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/apache/cordova-plugin-splashscreen.git"
  },
  "scripts": {
    "lint": "eslint .",
    "test": "npm run lint"
  },
  "types": "./types/index.d.ts",
  "version": "6.0.1-dev"
}
